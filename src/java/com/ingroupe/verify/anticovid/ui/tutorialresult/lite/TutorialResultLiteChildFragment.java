/*
 * Decompiled with CFR 0.0.
 * 
 * Could not load the following classes:
 *  android.content.Context
 *  android.content.SharedPreferences
 *  android.os.Bundle
 *  android.util.Log
 *  android.view.LayoutInflater
 *  android.view.Menu
 *  android.view.View
 *  android.view.View$OnClickListener
 *  android.view.ViewGroup
 *  android.webkit.WebView
 *  android.widget.Button
 *  androidx.constraintlayout.widget.ConstraintLayout
 *  androidx.fragment.app.Fragment
 *  androidx.fragment.app.FragmentActivity
 *  androidx.lifecycle.ViewModel
 *  androidx.lifecycle.ViewModelProvider
 *  androidx.lifecycle.ViewModelStoreOwner
 *  java.lang.Class
 *  java.lang.Exception
 *  java.lang.Integer
 *  java.lang.Object
 *  java.lang.String
 *  java.lang.StringBuilder
 *  kotlin.Metadata
 *  kotlin.jvm.internal.Intrinsics
 */
package com.ingroupe.verify.anticovid.ui.tutorialresult.lite;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import androidx.lifecycle.ViewModel;
import androidx.lifecycle.ViewModelProvider;
import androidx.lifecycle.ViewModelStoreOwner;
import com.ingroupe.verify.anticovid.MainActivity;
import com.ingroupe.verify.anticovid.adapter.IAdapterInterfaceClick;
import com.ingroupe.verify.anticovid.common.FeatureChildFragment;
import com.ingroupe.verify.anticovid.common.SharedViewModel;
import com.ingroupe.verify.anticovid.databinding.TutorialResultLiteMainBinding;
import com.ingroupe.verify.anticovid.ui.tutorialresult.lite.-$$Lambda$TutorialResultLiteChildFragment$QDpJN5fzajznmHqrVPTKopqdGMo;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;

@Metadata(bv={1, 0, 3}, d1={"\u0000Z\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0018\u0002\n\u0002\u0010\u000e\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0004\u0018\u00002\u00020\u00012\u00020\u00022\u00020\u0003B\u0007\u00a2\u0006\u0004\b#\u0010\u0015J\u000f\u0010\u0005\u001a\u00020\u0004H\u0016\u00a2\u0006\u0004\b\u0005\u0010\u0006J\u000f\u0010\b\u001a\u00020\u0007H\u0016\u00a2\u0006\u0004\b\b\u0010\tJ+\u0010\u0011\u001a\u00020\u00102\u0006\u0010\u000b\u001a\u00020\n2\b\u0010\r\u001a\u0004\u0018\u00010\f2\b\u0010\u000f\u001a\u0004\u0018\u00010\u000eH\u0016\u00a2\u0006\u0004\b\u0011\u0010\u0012J\u000f\u0010\u0014\u001a\u00020\u0013H\u0016\u00a2\u0006\u0004\b\u0014\u0010\u0015J\u0017\u0010\u0018\u001a\u00020\u00132\u0006\u0010\u0017\u001a\u00020\u0016H\u0016\u00a2\u0006\u0004\b\u0018\u0010\u0019J\u000f\u0010\u001b\u001a\u00020\u001aH\u0016\u00a2\u0006\u0004\b\u001b\u0010\u001cJ\u0017\u0010\u001e\u001a\u00020\u00132\u0006\u0010\u001d\u001a\u00020\u0007H\u0016\u00a2\u0006\u0004\b\u001e\u0010\u001fR\u0018\u0010!\u001a\u0004\u0018\u00010 8\u0002@\u0002X\u0082\u000e\u00a2\u0006\u0006\n\u0004\b!\u0010\"\u00a8\u0006$"}, d2={"Lcom/ingroupe/verify/anticovid/ui/tutorialresult/lite/TutorialResultLiteChildFragment;", "Lcom/ingroupe/verify/anticovid/common/FeatureChildFragment;", "", "Lcom/ingroupe/verify/anticovid/adapter/IAdapterInterfaceClick;", "", "getTitle", "()Ljava/lang/String;", "", "getTitleId", "()Ljava/lang/Integer;", "Landroid/view/LayoutInflater;", "inflater", "Landroid/view/ViewGroup;", "container", "Landroid/os/Bundle;", "savedInstanceState", "Landroid/view/View;", "onCreateView", "(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;", "", "onResume", "()V", "Landroid/view/Menu;", "menu", "createOptionsMenu", "(Landroid/view/Menu;)V", "Lcom/ingroupe/verify/anticovid/MainActivity$NavigationIcon;", "showNavigation", "()Lcom/ingroupe/verify/anticovid/MainActivity$NavigationIcon;", "position", "onItemClick", "(I)V", "Lcom/ingroupe/verify/anticovid/databinding/TutorialResultLiteMainBinding;", "_binding", "Lcom/ingroupe/verify/anticovid/databinding/TutorialResultLiteMainBinding;", "<init>", "app_prodRelease"}, k=1, mv={1, 5, 1})
public final class TutorialResultLiteChildFragment
extends FeatureChildFragment
implements IAdapterInterfaceClick {
    public static final /* synthetic */ int $r8$clinit;
    public TutorialResultLiteMainBinding _binding;

    @Override
    public void createOptionsMenu(Menu menu) {
        Intrinsics.checkNotNullParameter((Object)menu, (String)"menu");
    }

    @Override
    public String getTitle() {
        return "R\u00e9sultat - Tutoriel";
    }

    @Override
    public Integer getTitleId() {
        return 2131820846;
    }

    @Override
    public View onCreateView(LayoutInflater layoutInflater, ViewGroup viewGroup, Bundle bundle) {
        TutorialResultLiteMainBinding tutorialResultLiteMainBinding;
        Intrinsics.checkNotNullParameter((Object)layoutInflater, (String)"inflater");
        super.onCreateView(layoutInflater, viewGroup, bundle);
        this._binding = tutorialResultLiteMainBinding = TutorialResultLiteMainBinding.inflate(layoutInflater, viewGroup, false);
        Intrinsics.checkNotNull((Object)tutorialResultLiteMainBinding);
        ConstraintLayout constraintLayout = tutorialResultLiteMainBinding.rootView;
        Intrinsics.checkNotNullExpressionValue((Object)constraintLayout, (String)"binding.root");
        FragmentActivity fragmentActivity = this.getActivity();
        SharedViewModel sharedViewModel = fragmentActivity == null ? null : (SharedViewModel)new ViewModelProvider((ViewModelStoreOwner)fragmentActivity).get(SharedViewModel.class);
        if (sharedViewModel != null) {
            String string;
            TutorialResultLiteMainBinding tutorialResultLiteMainBinding2 = this._binding;
            Intrinsics.checkNotNull((Object)tutorialResultLiteMainBinding2);
            tutorialResultLiteMainBinding2.buttonTutoToResult.setOnClickListener((View.OnClickListener)new -$$Lambda$TutorialResultLiteChildFragment$QDpJN5fzajznmHqrVPTKopqdGMo(this));
            TutorialResultLiteMainBinding tutorialResultLiteMainBinding3 = this._binding;
            Intrinsics.checkNotNull((Object)tutorialResultLiteMainBinding3);
            WebView webView = tutorialResultLiteMainBinding3.webViewTuto;
            Context context = this.requireContext();
            Intrinsics.checkNotNullExpressionValue((Object)context, (String)"requireContext()");
            Intrinsics.checkNotNullParameter((Object)context, (String)"context");
            SharedPreferences sharedPreferences = context.getSharedPreferences("com.ingroupe.verify.TUTORIAL_KEY", 0);
            StringBuilder stringBuilder = new StringBuilder(56528);
            stringBuilder.append("");
            stringBuilder.append("");
            stringBuilder.append("RRQW9zcGdQOGt1ZDh6bmhVTHdubFZES1VHY2lndFVUeFlkNUNBYm9SbXRTMWdOb3lJNTY0Z0tiRGFncWNBWERqcUhBYTJRaVFIVjVPZjJGVnVnK2lXd1JNRlJCSkp0TnhGMWhobkI3L0lRcW9MU2xqZmgwd21pZEdTVmJVTjJEMjV1RnBDVlFFbHhKSU9QeDBvR2NsSVBjUGpyMDB0SHlJTjJRbWx3OWh4WlRjbzAzbTBrRWlRTjlrRVVpZENUZFF5aUlHRS9Kb0Q0TXJrbWRGYkxtdG5rZktOTlpObGpTRnpJUExEcEVVbGlHN2lUWUNHVSszTlFjbFRiQklSTVQ4eFA1Z21vQytTQ0E3SlFESFJkMDJ3OHdFOGJVWXhPR2VrcklpT3Vlb0NOUDZxMzdGMkh2c1ZYOGlZT3ZkVXpVQjg0YWgzWDIzbGVRSnJ4NWhkR2NoS0JYR2NDVGVMMDR6SzB1TzhaRkloYXRLRnBJU0VSdHhRckRKTWNQdUJMUnVQZ3JtZE5hdG1oMXVJL1ZFalZqMUdvMnJBdldQU2VFVEJPOWc4ZjRTOHdwUUlua0h4UVg2SjhHVjRHbG9sSWFUTzZ5amVnZTBZS3lleUhOREIrQ0NEQ1F2c3BTeFhIZ2xyNWdtNTU2aFBBaWFoU0w5UkUrRXArTGhNMmdIVEk5WXNCRU9NNjRnQ3h0Q2xSV1ZYZ2NCK3ZBcWRBNTFuR3RhczVnNHJsclVQZXFjWFhLZEhXazl4NXdZVkszM2d4c0thVjhReU9SbkVWL0NGVWdMUmJLdGFuTnN0NEsxSmxtcEhCeEJtRzM0UWs1NkpFQU81TTJ6QXF4b2VsOExySTJGY0NrZW5BYXVvY01qbXV0S2ROWVpSMndMUFhHRUJSRlp1UENVRWdKWGlzUjlrVGw4YXZzeFpRaDdBaGpJYjNqR0dTU2NnRXEwMjZSdkFQTFN6ck1jVkdFTVBVRjZJUmdCcDZhdE1CWEo0dGFPeFA1ZzZWWThvOGJldkxjUjJ5M1kwS0tEVUdiQWkrMDRqS3JERWlKS0F4RFBuR3JxaEZpR3F0T1NGUWZmMjYzQjU5U1ZCUkpweUx1ckZCeHc4eG1VRjl1R1ptRWxYYkxjTEE0YnNtZ0Y1RUovN1J2UWxUUW1wTExYZW1HQi9XUWk1UXhGaENFeFI5QmtGQVVYbFRpc3kzWG44SUhtQkNpdC9BdDhPYjhnL3d5bXduTnQwRUNOREtJNGRHZHlDWUxRYUdQTUF2WWs0WEloM1ZjVGVCdEZhUzFLMEZXQ1RLam9BQlFBQzU0dVdGdVhia0hhd0lveUFzMGlwbDhHSWJFbHc0Wkl3S2ZxdllOSWxhSFkxZ0pUandWTlJUVlg3aFZxNlVFVWtlNWtGcUFWQndrRExzSkJQeGdTVXZ1c2l6SHZXR3ZndUpkOXlhTEovRnBmQTd0NU5GWkFTUWxvNHFOVlFTbXozVWp3em9wTEhXQWJ5eTVUV3IzeGpMRjJ5Z25sbzVNNENSTGZUZGNEM0lGY0JtdFliK2xQUUxTRC9sWmtGL3VydFVRV2M2UDVVSkhEMUVMeXNXcmdUTjdrelR3M0EyZVN5NUxhUWErSmZKTXJUSHc0SXh4a3c1amZ1QXI2bkx0K2tJZ1podVRkZkZQL293M1c4eXcwSGdtZGVobUs0aGZReXB5Qi9OUk9SWlZlTkZTMmJpZ2RUUUNIcGlLcCtCU1JBQVBSZm4yZm9nYXFEL1Y2RUk5VHR3UmlFOGlrTkZTKzlPcTYwMCtWWUxXVnFNV210b1NXZUt3SjFZWVVZbko0RXJLNFY0YUlrbENBVFdDdzZRQVpPdW9IZDhmc3NldFBXUVBrMUxONVlQcjhYRXNnZnZzanRqUDdvZ0I2Nmd1N0hzZmFrRkZwS0lqQ1BWSTdLQXV1T0JuSFhMQXpIeHFVS1RLakE0TE1Fb3BVb29tcTlOUjZ5TVdaY0RVbFlHS3BTWHhnbkpmWXJzcXlZL3lKVnN4VHdrQUJXckpxM20wRzdGY01qMXpaWWdHajl0Rm56V3hTVkJITlFHaldaNlpkVkh6RWNxMmJuQWhNNXpyZ1RreGhCc0RiMEtYWVk2cmpkUjZQM1BkSmdXQ1FBR0ZBc2s2Z3BZRUNKYnJBYmhodVpVNnprR2JsVnhUQ2toVFM2TDJZQ2hVTmVuUWxkZ3pNTFRKU3lFMEpwK3RUaHNaZlBSczNCaEVzTlJrczdjZHF4QVdsS2RFNzBMWm1EWUVQVUdidGFCaXkyUDRZK0VBREpYTEdhRzRpUnNmSTErcFR0UXExaUpSSmdqcExlcEIycnFDU2pINVdSUHNPQVQ2RTZNQWZwUGxwSHJCMG1Wd2kzaUJXdjMyNHVTWHdIUEQxUXg3dFNreVJaNnJjbThBb0d1eW45QUxIL0lrbmdES1BSNkpyT2hXTkVWT0lndnRJak80dFVkSG9iWndISStPMG1aRnZqb3FjZzJxS2NMRVV1YytvR2NBREJ3cDJpR09SMTNkN2pac2JFTFVWZ2JKN2l5VlVRVG5lSXJ3eWpyVVZBd0o2UWprY0ZOUzJnZy9GY01JNUs5TVdNMTRTYUNXODg0NHVteHRrMUhtTHZIMXhYbUxwejBvc28yUVY1TmYzYldyT3kydUI3aWxsTDJiT0hLbmpvY3pFdnN4VUlWNXVEZVdudHYwOGNheVBWdkJULyt6S1pReDF5VmJJcWlUUDRISmlOaWFabE5aRUZsYzlWY1NEUy8zWGFTTitLSFFYbjFtZmlIUWZpN1BmcURPakhMc3FERkorR1RwdVZYdFV4Vm82cWJZcW9oTmFzaHJ0Nm5mdGo4d3lQdnVEaE9LNC9aWlpqR3VEalFZcWQzd3lOUjJFRldBR1FsaHJaNDkzRWxtUTJLQVR6bHd0cVMzektvdXYwUGZDRDRTWXhsSFVKRktRNDRtbmd1UmQ0dmx0c0N4ay9rdTYvRXVpOGgyRm95ZUtWVUptS2dGMTd3cXpCbVpMYXJEWjY3NUVYZmtqSGJRZml5YlM0c2JIUXBjTFFnZDZJbHFOSUFMWnFzSkNyTGt5dnBCY0xCZXBxcXAxSEdyZktEbkpiZ0dCaCtQclEzVDJGRHcyNHFUb0Y3d2JPSTlqYmJMUnJSVW9rc1lsaExuRGNZZzVKTU1XRXN0UzloSWprTk5xMFgrT0lLRG1kWmVBT3kxSFRpNU5IL1VVVDdxaCt6Ry9ZWnpFTGxYd0F0citGVEhJQjN0THh5UUVTS2ZrNDlvYW9uaXdOaHpYWnoxbUEyYlo2Y04zQlBHUXA5UmhDUGNpS0JqanQrLzZwSGVxQ0dMQUM5RHFqOE9SOTNHOGhnY1MvVzFhM0NpM0RrR1J6c05ZT1ZUYnhwUmtNZW0zcW9HVWRUSmJuaVIyMkk4c0ZSVXBjSzA2bFk3UWxPeDdWZSt4TnViZk9RTE9LZlpKeld4dVFTRVJlc3c3ODRHUjR1MjB3WW5SZzN6REhlaUs2ampTZjF1bGhKbzJsa051UzZwRTdWNUdoRUQ2Mm9OdFlJUWpONE5zMFlXenVDTjNRZHh5NElnMVFBNnRlUWluTitnUXM3YWlONlBDZHNSN1A4SVlXczc0LzlEMkQvNGJrUVNjQ2FTaUtQRGhGNmJtaXc3dXJ4YnJvMHJpVzU2OHNYWEI1bFl3M093YXRRNGNqSUNLSmlPWXM1U3AxRk1kekRQVzNNTW1BR2tFaGlERTliaG9HZUxrVkNLNDhMeE5zRC96cmUvakFQYW9TbUpVYlU2UzFBZmluVnZRVXdiK2JnTVU0TlVBNHdKVFpET3JZQTNvb1BDV1FqMGxFQlFlK01vMFl6MnpmdUlON2t0VmtoTlFzL3F2LzAyY21XbitiTTluQzlxMC95KzNQeTEyalMvTHpkL3JUYk5MK1NtNEtCbjdsSWJNRDRDM2hpeEI2MEowNnMxbjZ3dHkvaXZpY3ZkL1FienhqelRQMWpYZktYZFAyRmQ4NVYyLzRSMXpWZmEvV0JkY1B4Wis0WmUrYis2ckNoeUV0eWJDYVFHMHZoSjhBdXczS1FUTVBxbEZJOGZLYTdKVDBVRng5UWpmS25tYVhXUHcvWERQRzhZS2VWanNRVW8vYXF0SXgzNXlSYzFiaXBsajV6YVhJSEdQckwyUXVVbWlWY2VFVy9wTFlvTllwbUQyT0RlUzdYcWpEK2FrNU9KOGM2NXgzSkR2UVZFRzRYaGtHd2FLUUlRaWs3Wm9IbURQNGZwZ1dHNGRXcG5GRXFTOXBTMzd3di9YdURqS2xHOXprNVFDSm05ZG5wYVVBS2JkN3ZHL0dQL0JueVE3bUQxYTVUdUdGVG1rdTV3VTZxREpmRFFmNkowUnBBc3VOUlZpaEZRSUZ3bUNBc1VzNUpQYmExYlcyV3F0Z1NteWp3WHNNTEFmZTJTVW8xNDV5dWxxaU0rUmxyS2NmdE4zZER0WG9rRCt2NUxqV08raVp3LzBEam1tOGo1b2NiNVBZVmp2a2ljcndybkplTGY1Mkh6YXlMK2ZSNDJQeVppY1NqQWNta1lxR3F0RFJCSUNTOVRaWTlQdlhWY0J2amkxYjB0Z0g5eWQ0eFJqZEhHMG1vVFJaQlBRUkFhTG1sbFFTYlNwdDAyeXJFemFQSUQyaU1LYVVXMVVhcGI1cmFHRHpIQXBVaXJjUlMzRm16Ylhuc0Q4U2YvMkp2ZTdETURWaVdodE1GQlZFdGdkU3BDYTJnWEpLT3h2UHJQTEkvbFN3dW1IdTBBam9PMnFRSVpXY0QxUWh6SG5WWXFsb05Fd0Q5ZU5XV1FFOURpei9aQnVaNmtIczdLK1k1TUpjMTlva1duSnNORzk3b2dvZTdhQ0MyQmhBYk9CeGsvSDlxUm94VmVKTTJCT2JLTEkxdE5VcWlkQkU5SjFrbjlhQllPMDQzRTZZYkRPUTRSNUMvcUZhRGFldU5lTm5JekZBalhuMklUcWhTS2NxNnIwVW1lQTdHMW9reGNpWjNjdkUwV0NJVFV6NHRFWEo0c3hNWmFlVHNXU01OWlh6cWltajBhRVM4YjhFQnd2aDJRYmRhK0NXSVVFQlU5a0RXK2FtQWhZTUgxSTlXV25WcWlKYzJ0VTlwKzl6UWFicWx0N2NMQlkxN1RMSk9MSE1XMDdudTlkZHlLQm1jTEFkWCtHR2djKzdoemdPcXdxMk03dFMvMnJNS3NIOWd2Q1EwWEY2NElndzhaRjR5NCtndzl0RXZGelJHdjg3Z3YwbXVodHVXKzduUlcwb2dhL0NoT0NpL0ltUUdrbmhmbEJBM2FlZEE4bmxMSUpZbEpuMDZjL3AxSlN1dmRuaW8zSkVSaWcvZWliRzFaTnFrL2JYcW90YnVFeHBTTVJMMU5HdFFCY0xYeGdtQkxvQXVDa2tTNmt6UUUzSUgrb241dkV1OThxUjgyR2hSMUFjU2dJbTdHRisyNlB6ZURCRlRuWGozdm8raHB2RHRybEFab1FaUVdjemVWdGxCU28zTWFHVTNZb0hsM1ViYUVyVlRNRkk1cUhqRXBDWkJweVpQalpYcldYSE1mRVhjMDM1NHNWUmorWlh2MlczZlcvRUY3OWx0MzF2eEJlL1piZDliOFFYdjJXM2ZXL0VGNzlsdDMxdnhCZS9aYmQ5WjhiOCtxN3VEYXFSa3hUUXdQemNZRWNoa2RESm1RN0czN2hRRUFCV0FHZEhSSXdQKzB6b3d0NXpPbXFCYXh4dHJPeXh5MlY5UnNKNlZMUUhiWm9XRkc4VFNmQlFacnRSZ25CTXFSZVNVZTJxYW5RUHhFL3BKL1hSdEhsSHFSTTY1QzVaRWRERktvMW5iUkU3SkthcVJ4aEx1L3JZNVhuN1pTSW5DT2JUZXR0c04yYkxUazNGd3ViSXMvamlzdjNGK1RKd0xMTkRWNUpXSVNRbXQ2QXp4WkRjcmVtZ2dDY3RiVkVidUNWMkRyb3ppdWFybE40ZHVZRWRmdjhneSs0UkcxQlFORVZ3Mk5sbTAwZmtsOTd2ek1qR1dOSGNkMS9ScTVpYXAvZG0wbGhsRUloUXVKZm91eXVNbkdXUkFHR1RXTVlPY1MyMGFRa3I2aytETjJKUVljRjZlMWF3bWRpbEtEQnBvRVMrUnZwSmoza3ljcmFXTDZHSks1SXFkNlFjbHBoNzNOWndwNkZ1MmMzNWxKWEJMWEZTWWVxZldLbFlKaml1M1BaRnkwUWRFQjJBVEszb0VLMEVqZmFvSEhuZFdycGRxQ1dLTnA3aDdqRjdremNCdWxOQ2g1cDcxUVZnV0JnS21QMVZERlUzNFY4R3RWdktmOU9tcWNvdHlycTJXbS9pUzI2RDR1Y1h2Q3NrR2FuTmZ1QjJwcEFrK3hhMERYYXA3NHgyNys5ODI4K2JXYi84dk0ydzh6NzkwUHpielpmOUxwL2RMb05YL1U2ZjNTNkRWLzBPbnRGaERJbXJPaXNJeEdjdDErcStacWI4MEhoRWQ2NCt4T2o2USt2bm5NSkEzdklnZzNWQzhhM25tTUxTVmx6YkplWlRuVEF2QTFYZUpCNXVEZUNUaUU4NElEQlNFTmVxRFFDWlRtZ29BUlVpbzlzMUhhaWpDZk80VlRUd1RBR0FYcGpqWisyclZjd2QyV0NCclMxQzdvQUw3QnhSVUg1YlRsb1ZOS0dNaG0vdG9IMVRhb3hwNjVFT1M5cHFDc2YrYkorN0U0T2JVc0x2d3BRQTFkaXZ4V1BQSDlFaEh5RE5hcWJENW5iWWUwUWRjMDRwWiswMGg5UlBZbURkcHFXK0lPV3luM01HUGdsYURHTlpQODNWSUZsR1JPaWhxVWQ4YVYyL1Z5SmtlcUdJYldVTlY2RTVETEtaQ0RCbUk0bDVhRVlHdGtmbXVLdC8rMU14NDBSNHlPaDdzV2wxZHowUXhGNXBxUFJuUFFmbmMwQjZXTHVGNGFpQnpaSkdvYXEwcklwcmdmVkdnYThaaE9vejcrR1l2ZmQ3NFh4RVAwUitMWFVyaGJ6eXh1dTdxUUw3Z2ZkT2JPWEdGTkQrOXQxS1hUNklsZ2F1ZTUxZG5TRXcwa0dVSFZsaFNPVi8ycUtpSURIL0ltazRnUmZvTi9VWVB2cm5rbnZvVVUzRU9QdkNpcVFKbWUwZHJBa1daOXNDdWFqZVI2WGFPT3NGcDh5c3oyZEIyQUg0Ull2TkcwSDdPbi9uZUh2cHdsSWRQZlB5czVIalJQSlZ3SFBUVlE5UWllcmNkUVg4R2pyYmc4NERoWU1PNWhxSXV1VVp5Y0c2cjQ2YmhvN3ZCMlhJTEUvbFozUnBONm1sdXV6V2xRQ2FDKzQyV1NySndXUWphVkJaenFWVS84MEl3UkJwVUk4Z0dQc2R1NDFiOFBxQzBYZzhnRGlCN0ZKaTFqdFdGSFVBazc0SS9TMEhUZHpZTzZtZ2hsdjVvdGQxWkx6enBrcjBwRHBXWTFkcnFtVnhNNlRkNHphZXpUVlhObnlEVHFqU1JLTUN0SFRIZENyV2tnRlhCRXlhTWVKZ2xUZ3BWbElTSnFEMUZMVDI5b2FHaldtdzg5MHdUdEdobStMZzB5dXZZWG1jVzkzK2xRR1d2MWhqVXBqMVlEc3JSRktCWUZZKzB4R0JkTWNwRHZ3dW5mZG81dnhiNVRZZklEZDVoeU9kWlIrNkdrVU5Pb0JRbU9CQ1ZzZXNpTWNqZGZLeUtrNDhLZGQ2ZlFlM0xvQmJpUXlsMldxNE9CVUMxdzRiNlBpSUJOSkRNVlRSWFdxeUU3VitNb1A1VEFXWld5clloS09iTERMZlVmakpNQS8zaDN0UzloNXRQVW1LRm9sV0FSVXdSbWRlbHZzaUh3KzhnYUZMbFZiYTArVDFlY0ROL2RhZUVHamhLMWdScUlNMmpOL1RaUFM2azNqU1QvZXJ2aHA5OXg5akJ0aHgrZ3YwQmhCQ0daV2xaRDFmTnlHdlkrcGZXYSs1Qm44eDk5Z0thQmxZOW53VzREUVFOR1hUMUFzbHJQTCtsWnJxQkR5ZW40ZnJlNDRibWpiVnBBbHNKSXcwTHZVYzlnTkcwMkVBcVQwTmlBT3BnRDJiR1FTNXZkeU82SjV0M2FMbDU1UUpSVzh6b2U1WXphaWxyWDJ4SFV5TGpQT010K2pKb3BUbTljZGJEa2VtSmF6endKZUdjY24xSWtTQWFWcUJYQVJHaUVpclhjVWR0WkdwMHNyQnJwMWtXRG5JUTAzbTFxZzBqTkxKUldUQWQyeDFxK1hUNGgyRStHdE0yWDdrVzY3V0pzTTVFZzBOVExrS3JYbzhWVVkxWERrVGNBWDVxa3ZIL0JuT0VMMTlZVzlIZGVXR05qdThTaUxzdGtMZ3gxM3FmcFFXV0tLd2cyQW9RRFh4S3RjZDVuR3NBWm95bGwwdTJPN1dxTDYzWm83TklZNTVENXA0NDhpcEg2OWFpaWpUM0ZweTRDQ0p3VTVEazYwMGQ0MHRqS3dubzlBQkQwSE5MU3RwQzJFcGJVQUZoVzM3RUQrejd4eEtyM1NqQ2pLeTRmVGE2aHRSRFZta0RBUzExUm5mTWNtR0lVY0pQdHJSdTlxQWNEbjBlZU5BQ2x4aVQwZzBydmNWTDdtZ0hNckVXZXdYUk9nenNkVVdPYlhhYWNwTVNxNlVrdUR2V08vNmJ3VkdMUmRDS0E1NFhNajlSTlJZaVBxdVZpckdoMjdsYkE3RWVocDFaL01Zc3Z1MExwcDVHd0xzdXBRNmdTYWVxbkFGc3FmMXdkU3dGOHlKYlZ2S1I4eHREVUpuV2lwME1FS1lvR2FZQTdodW1KS2xFY0JlTkhHT0xiS3NZYnU3ZFhuUENLbkZhUFpSS0d0ZjBlbkhoVEgxWFBqbTdyOUl4aWZ6cGdTRHV6MjdtNzRSMU1SdHhwM2xxanlsV3Rla2k2bHp0bFdiU3hSMXBLM3FKQUw0VHJXZGtDVG9CbldIMXp1M3NDV3J4RTBtRHE2b0E2MmNiS0lLN1F0YXVjYWJFOVdmTW1kMFNqWmoyYWc0SEJlS3ZnQnVCcDdnNklsVXhiNjNaWVBFQ3JaTk5JbzdaNHRWdWlKakR3NVo1TnhjVFN0WUdBR29nK0xnQ0M5TmtNYldQaTZXSVkvcU5YU2ZyM0JWNzdWTEVyWFZ1VVJVTWNSMDBTZVcvd0RqNnlwQkxYdHlZWHU4dzZxUERIbEdsYmVmOWJvS1U4VU14eEdWZVJoOCtUb3JjZTBiOVpFZ3lUalBtOUQzTjFkQU5GTXVVSzJ5UFJlOWY0VCtUbTlSbFhXelBvY1dwemgxTTBENlNueXlLVkgvWDRsQjY5dmFsUWluYUNOamVYOUt6RzBUeHZCcGIxZUsxMnVXU0JqWVQwN1ZoVFo0UDZPbnFnNXBtNlhIZm84bXlocmRjRHJ6NWxWelRlVzRSRjdvclRjWFZtVFVidGJRdktjdEhSc2I0SXJaYnZicWdlcHNYVHFVMnJ0UHpCczV0RFFuNW9DckZaWExiQ0phMVIwMzN1c28rdTJzMG9OSmpTQWpuYXJJUUR5N2w3aU8ySlFXeXdXUFdvYjBES3BtSUNIS0tPb3A0QUNucDBsbnhNaHlRa0lkV1M0TUwwMU9xbU9CQk9YTnpoWmhGTHorTzR2V2MxS3d0MGhLTFRodWlsRnlYWit6Z3B1b3c3QmpBNkNQalg4NnQ2a3JTcVU3bXk3OFY2c3Z6OWpjRWpTd1dTUml0eEZhMm9RYTFLMWloWVVUZGkzZWZZbGpZNE5RbUZEcE5WMzFSNnlWcllReG1nczkzSEk2MHdLZXdHTXlOSU5YcDdFZWNaL1FESWpzMHcxUjR0QkFnOHFWbHpINVBEYUtnamw1MVJ3M3BTWTc3RGkzcGk4bm04QWVEajhPaS9sRFJ5MjlWKzROb0JyVHhaWFYrZHRsajJzMmZMdlhjMFpGUy92VWY4RXVVL212NFhKK29lbDNpZm5RVzJ0VU9BN1lwa1M4bzREMjZuM0RXNlNSQ3Vxa3FHdThEck43bWxFbXZhZWdRQkZ3Z1ZnWm9XQjRyZDBIQzRIckVWVnViOHJCZEtZV3ZrZTZzTFl2TXhtR1NTVS9iM0ZOVXZoVkQwT0NSdklaeXhxWTAzV3hBQ2FFdjlOalY2c21wc2V2MFBJZUs5dkFXTThGclVoa3lUcnRHUW11Y2U3NE1LNmhsS2dXTURCb0lWUkpRSmpKSnZIRm0wTWxBWWFkK0pUTFA4ZlNxS05Mc1BQK2lwdC80TzJWQlZQOXRPUDFDL3RlWi9BUnlUNm1FV3BvMzlBQUFCaFdsRFExQkpRME1nY0hKdlptbHNaUUFBZUp4OWtUMUl3MEFjeFY5VHRTcVZJbllRRWNsUW5TeUlpamhLRll0Z29iUVZXblV3dWZRTG1qUWtLUzZPZ212QndZL0Zxb09MczY0T3JvSWcrQUhpNXVhazZDSWwvaThwdElqMTRMZ2Y3KzQ5N3Q0QlFxM0VWTE5qQWxBMXkwaEVJMkk2c3lyNlh0R0ZmZ1F3Z2g2Sm1Yb3N1WmhDMi9GMUR3OWY3OEk4cS8yNVAwZWZralVaNEJHSjU1aHVXTVFieERPYmxzNTVuempJQ3BKQ2ZFNDhidEFGaVIrNUxydjh4am52c01BemcwWXFNVThjSkJiekxTeTNNQ3NZS3ZFMGNVaFJOY29YMGk0cm5MYzRxNlVLYTl5VHY5Q2YxVmFTWEtjNWpDaVdFRU1jSW1SVVVFUUpGc0swYXFTWVNOQitwSTEveVBISHlTV1Rxd2hHamdXVW9VSnkvT0IvOEx0Yk16YzE2U2I1STBEbmkyMS9qQUsrWGFCZXRlM3ZZOXV1bndEZVorQkthL3JMTldEMmsvUnFVd3NkQVlGdDRPSzZxY2w3d09VT01QaWtTNGJrU0Y2YVFpNEh2Si9STjJXQWdWdWdkODN0cmJHUDB3Y2dSVjB0M3dBSGg4QlluckxYMjd5N3U3VzNmODgwK3ZzQlRWNXltSnc5UjcwQUFBMFlhVlJZZEZoTlREcGpiMjB1WVdSdlltVXVlRzF3QUFBQUFBQThQM2h3WVdOclpYUWdZbVZuYVc0OUl1Kzd2eUlnYVdROUlsYzFUVEJOY0VObGFHbEllbkpsVTNwT1ZHTjZhMk01WkNJL1BnbzhlRHA0YlhCdFpYUmhJSGh0Ykc1ek9uZzlJbUZrYjJKbE9tNXpPbTFsZEdFdklpQjRPbmh0Y0hSclBTSllUVkFnUTI5eVpTQTBMalF1TUMxRmVHbDJNaUkrQ2lBOGNtUm1PbEpFUmlCNGJXeHVjenB5WkdZOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6RTVPVGt2TURJdk1qSXRjbVJtTFhONWJuUmhlQzF1Y3lNaVBnb2dJRHh5WkdZNlJHVnpZM0pwY0hScGIyNGdjbVJtT21GaWIzVjBQU0lpQ2lBZ0lDQjRiV3h1Y3pwNGJYQk5UVDBpYUhSMGNEb3ZMMjV6TG1Ga2IySmxMbU52YlM5NFlYQXZNUzR3TDIxdEx5SUtJQ0FnSUhodGJHNXpPbk4wUlhaMFBTSm9kSFJ3T2k4dmJuTXVZV1J2WW1VdVkyOXRMM2hoY0M4eExqQXZjMVI1Y0dVdlVtVnpiM1Z5WTJWRmRtVnVkQ01pQ2lBZ0lDQjRiV3h1Y3pwa1l6MGlhSFIwY0RvdkwzQjFjbXd1YjNKbkwyUmpMMlZzWlcxbGJuUnpMekV1TVM4aUNpQWdJQ0I0Yld4dWN6cEhTVTFRUFNKb2RIUndPaTh2ZDNkM0xtZHBiWEF1YjNKbkwzaHRjQzhpQ2lBZ0lDQjRiV3h1Y3pwMGFXWm1QU0pvZEhSd09pOHZibk11WVdSdlltVXVZMjl0TDNScFptWXZNUzR3THlJS0lDQWdJSGh0Ykc1ek9uaHRjRDBpYUhSMGNEb3ZMMjV6TG1Ga2IySmxMbU52YlM5NFlYQXZNUzR3THlJS0lDQWdlRzF3VFUwNlJHOWpkVzFsYm5SSlJEMGlaMmx0Y0Rwa2IyTnBaRHBuYVcxd09qQTRNV001T0RKbUxXRXdOVFV0TkRBNFpDMDRZbVF4TFRaa1l6Y3lZbU01TURneFlTSUtJQ0FnZUcxd1RVMDZTVzV6ZEdGdVkyVkpSRDBpZUcxd0xtbHBaRG95WW1Wa1lUWXdaaTAwWTJWbUxUUTBOalV0WWpNek5DMHhPREV5T0RNeE9UQmxNV1lpQ2lBZ0lIaHRjRTFOT2s5eWFXZHBibUZzUkc5amRXMWxiblJKUkQwaWVHMXdMbVJwWkRvM09EUTJOMkkxTnkwNFpEQTBMVFEyWmpJdFlqZzBaUzAwWkRnME5qTmlaV0kyTmpnaUNpQWdJR1JqT2tadmNtMWhkRDBpYVcxaFoyVXZjRzVuSWdvZ0lDQkhTVTFRT2tGUVNUMGlNaTR3SWdvZ0lDQkhTVTFRT2xCc1lYUm1iM0p0UFNKWGFXNWtiM2R6SWdvZ0lDQkhTVTFRT2xScGJXVlRkR0Z0Y0QwaU1UWXlNemswTkRRM01qSXdNVGt3TkNJS0lDQWdSMGxOVURwV1pYSnphVzl1UFNJeUxqRXdMakkwSWdvZ0lDQjBhV1ptT2s5eWFXVnVkR0YwYVc5dVBTSXhJZ29nSUNCNGJYQTZRM0psWVhSdmNsUnZiMnc5SWtkSlRWQWdNaTR4TUNJK0NpQWdJRHg0YlhCTlRUcElhWE4wYjNKNVBnb2dJQ0FnUEhKa1pqcFRaWEUrQ2lBZ0lDQWdQSEprWmpwc2FRb2dJQ0FnSUNCemRFVjJkRHBoWTNScGIyNDlJbk5oZG1Wa0lnb2dJQ0FnSUNCemRFVjJkRHBqYUdGdVoyVmtQU0l2SWdvZ0lDQWdJQ0J6ZEVWMmREcHBibk4wWVc1alpVbEVQU0o0YlhBdWFXbGtPbVpsT1RKalpqQTJMV05tT0RRdE5HRmhZeTFpT0RRekxXUmlNamMwT0dJeE5XTmpaU0lLSUNBZ0lDQWdjM1JGZG5RNmMyOW1kSGRoY21WQloyVnVkRDBpUjJsdGNDQXlMakV3SUNoWGFXNWtiM2R6S1NJS0lDQWdJQ0FnYzNSRmRuUTZkMmhsYmowaU1qQXlNUzB3TmkweE4xUXhOem8wTVRveE1pSXZQZ29nSUNBZ1BDOXlaR1k2VTJWeFBnb2dJQ0E4TDNodGNFMU5Pa2hwYzNSdmNuaytDaUFnUEM5eVpHWTZSR1Z6WTNKcGNIUnBiMjQrQ2lBOEwzSmtaanBTUkVZK0Nqd3ZlRHA0YlhCdFpYUmhQZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQUtJQ0FnSUNBZ");
            stringBuilder.append("0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0Nqdy9lSEJoWTJ0bGRDQmxibVE5SW5jaVB6NHpCUzNZQUFBQUJtSkxSMFFBc0FDL0FNWE1pRHg1QUFBQUNYQklXWE1BQUE3REFBQU93d0hIYjZoa0FBQUFCM1JKVFVVSDVRWVJEeWtNcXhSeE5nQUFCbU5KUkVGVWFON0ZtbTlvVldVY3h6Ky81NTQ3YWpWanhiaTFqTkZpUTlORmdtRE9nWUtnakRHaHpPcSt5QmRwdy83NFFpcEIyWlJBMkpzVVpoQklMN1ptWUV0RHNoZSt1UnJVYkVicUJrYTdtSkkxdkRVdTVndmQwTzQ1NTllTFovZjY3LzdaN2ptYlB4anNqcnZuK1g2ZTh6em4rVDdmYzRRUXloMGJVNGFHa05GUjVLKy9rRlFLYnR5QWlRbW9xSURLU3ZUeHg5Rm5ub0g2ZXZ3bFM0aTJ0RWdZZlpmZGlKdE9meTJIRDIrUTQ4ZVJzVEg3eDNuellQNThOQmFEUngrRnlrcjQ3eis0ZVJQNTkxOUlwZXlQNTBGRkJicGlCWDVySzg2YU5USm5BSmxrVWsxdkx5YVJBRlZvYWtLWEwwZGZlQUZxYTBzM2NPc1c4dHR2TUR5TS9QZ2pYTHNHdGJWNGI3NkpFNC9MckFKNDNkMXFqaHl4bzlmYWlyYTF3Uk5QbEgvOWZSODVleGI1NWh0SUp0RzZPcnlQUHByUjlKcldGek8vL0tKT1p5ZWswMVo0UEc2blNJZ2x3OFBJNTU5REtvVy9majJScmk0SkJjRHQ3OWRJVHcvRVl2Z2ZmQURQUGNlc1ZTYURIRHFFSEQyS05qWmlCZ1lrRUlDM2I1K2EvbjVvYnNiZnVoVWVmcGk1S0RsM0R0bTdGNnFxY1Bmdko5cllLRE1HeUlyWHRqWjA4MllRWVU3cjhtWE14eCtETVhoZmZvbnoxRk15YlFDM3YxOGorL1paOFcrL3pRT3JLMWN3TzNhZ2p6MkcrZTY3dkZwTnZnVWI2ZW1CNW1ZNzhnK3lubjRhN2VwQ3hzZngzM3RQcHdYZ2RIYmFCYnQxNjl4UG16eWxEUTNvcGszSXFWTzRmWDFhRk1EcjdsYlNhWHUzS2JKZzVleFpTS2ZEVzdUZmZ3ODNieGFHV0xzV1hiYU15SUVEaGE5QUpwbFVjK1FJMnRwYTlGWXBwMDhqM2QyWXFYMGhzUGlCQWFTbkI3Tm5UM0dJelp0QkZXLzdkczBMWUhwNzdRNGJqeGZ1N013WjVKTlB3SFZoZkR3d2hBd01JSWNPMlErLy9tb2hYRGYvbDJ0cTBQWjJUQ0pCNXNJRnZRdkFUYWUvTm9tRUhmMGlPNnpXMWQxdEhRSkEzQ1UrMjM1VEV6aE80ZjdiMjZHaUFuUHc0TjFYUUE0ZjNvQ3E5VGJGcXFZR2Y4OGVpTVVDUWVRVkg0K2pyNzllL0IvbnpVTlhyc1NjT0hFUHdQSGowTlEwUFdNV0VLSnM4ZGxhdFFvbUozR1BIVk1BNDQ2TnFZeU5vYzNOMDcvK1pVSUVGZy9vd29WUVhZME1EVTFkZ2FsZnRLbHBacE40aGhCaGlMOXpyWmd6Wnl5QWpJN2FrOVIwRGlObFFvUXBIb0FGQzNMdEcvbnpUNWcvdi93YmVRbUkwTVZEVG05bWFFaU5wRkxvazA4RzI0MEtRV3piRnI1NHlPbVZWQXJEeEFRODhraHdQNUFQNHNhTjBNVUR0L1ZPVEdDWW5JU0hIZ3JIMUdRaDhteUd1bTVkT09JaHAxY21KekZFbzRXMzczTHN3Y21UOTQwOGdQejhjM2dHY0VxdlJxTVlLaXVMbXFpZzlpQU0yM0ZmWmZWV1ZtSzB1dHFHVHJNZ1h0ZXRDMnc3OHZhVjFWdGRqZEc2T3JoeUpYeng4VGo2MWx1aGVLZDhSODJzdVRROCt5ejg4dy9jdWhXdStPeUNEY2tBM252Z3gzR0lMbHdveGwreUJGelh4bjFoaXcvWnhlYjZQWDhlWGJUSTdzVFJsaGFob2dKR1JtWkhmTmdRMTYvRHhZdm8wcVczN2JTdVdJSDg4QVA0L3V6NitSQWdaSEFRUEE5LzllcmJBSDVySzF5N1pnL3JzKzNuZzU0bkVnbTBvWUhvODg5TERzQlpzMGFvcmJVcGNZbjBJQlJ2VXdoaTkrNmltNnFNak1DbFMvaDM5SmM3MUhzYk4wSXlpUXdQRnpaUnk1ZkQ0c1hoZUp0N0lSd0gzYml4OEpsWUZmbnFLNGpGY0Y1OVZlNERjTjU0UTdTdXprYmNtVXhCRCtKM2RzTGl4ZUVZc3l4RWJTMzY0WWZvU3k4VnR5akpKTjZXTFlXejBjemdvRHJ2djQrKzhvb2RqWUxKcndlUlNIanhXNm4ycmw3RmJOdUcxdGRqK3Zxa1lESVhiV2tSZi8xNjVPaFI1Tnk1d2cyR0tiNVVlNTZIMmJzWFBBOXYxNjdTMldpa3EwdTBzZEhtODVjdlAvQnNWRDc3REVaSDhYYnVKRnBmTHlVQkFQdGtwS3JLNXZNQmZWSWc4YjI5eUlrVCtCMGRPRzF0MDR2WGM1WjcvMzR3QnJOakIvTDc3M09yM1BPUVR6OUZ2djBXUHg0bjhzNDdNMzlDQStEKy9iZWFqZzVrZkJ6ZHRBbGR1M2IyeFYrOWF1Zjg2Q2grUjBkUjhTVUJzdVcvKzY3S1R6K2h5NWJabExpbUpuemhxc2pKazhnWFg5Z0Z1M05ud1drell3QUF0NjlQSXdjT2dDcmEzbTRQSzFWVjRjejFrUkc3U1NXVDZJc3Y0dTNhbFhmQkJnTElUYy90MjlVa0VqYUtYN2tTVnEyeWNkOU02L3AxWkhBUVNTVGcwaVdJeGZDMmJNRjUrZVVaYVNyckdWTG13Z1UxQncvYWxIaHlFcXFyYlRTNVlFSHBkeVgrK0FNNWZ4NHVYZ1RQUXhzYThGOTdEV2ZEaHJLMEJINEk1aDQ3cGpJMFpMUEs2VmhpeDBFWExVS1hMc1ZmdlRybktzdWVmbUd2eGN6cDA1cDkzVVltSnRDcDEyMllldDBtcU9CNzYzL2pVVDNyNTlQZzB3QUFBQUJKUlU1RXJrSmdnZz09IiB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIGFsdD0iIiBzdHlsZT0ibWFyZ2luOiAxMHB4OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlIi8+SW5kaXF1ZSBxdWUgbGUgcsOpc3VsdGF0IGR1IGNvbnRyw7RsZSBlc3QgTk9OIFZBTElERS48L3A+PHA+U2kgbGUgY29udHLDtGxlIG5lIHJlbXBsaXQgcGFzIGxlcyBjcml0w6hyZXMgZGUgdmFsaWRpdMOpIGNpLWRlc3N1cywgYWxvcnMgaWwgZXN0IG5vbiB2YWxpZGU8L3A+PHA+TGVzIGF1dHJlcyBsaWduZXMgY29udGllbm5lbnQgbGVzIGluZm9ybWF0aW9ucyBsacOpZXMgw6AgbCdpZGVudGl0w6kgZGUgbGEgcGVyc29ubmUuIEwnaWPDtG5lIHN1aXZhbnRlIHBldXQgYXVzc2kgYXBwYXJhw650cmUgOjwvcD48cD4gPGltZyBzcmM9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBRUFBQUFCQUNBWUFBQUNxYVhIZUFBQUJoR2xEUTFCSlEwTWdjSEp2Wm1sc1pRQUFLSkY5a1QxSXcwQWN4VjgvcEVWYkhNd2c0cENoT2xrUUZYR1VLaGJCUW1rcnRPcGdjdWtYTkRFa0tTNk9nbXZCd1kvRnFvT0xzNjRPcm9JZytBSGk1dWFrNkNJbC9pOHB0SWp4NExnZjcrNDk3dDRCL21hTnFXWndIRkExeThna0UySytzQ0tHWGhGR0g2SUlRcENZcWFleUN6bDRqcTk3K1BoNkYrZFozdWYrSEZHbGFETEFKeExQTXQyd2lOZUpwemN0bmZNK3NjQXFra0o4VGp4bTBBV0pIN2t1dS96R3VleXduMmNLUmk0elJ5d1FpK1V1bHJ1WVZReVZlSW80cHFnYTVmdnpMaXVjdHppcnRUcHIzNU8vTUZMVWxyTmNwem1NSkJhUlFob2laTlJSUlEwVzRyUnFwSmpJMEg3Q3d6L2srTlBra3NsVkJTUEhQRGFnUW5MODRIL3d1MXV6TkRuaEprVVNRTStMYlgrTUFLRmRvTld3N2U5ajIyNmRBSUZuNEVycitEZWF3TXduNlkyT0Zqc0MrcmVCaSt1T0p1OEJsenZBNEpNdUdaSWpCV2o2U3lYZy9ZeStxUUFNM0FLOXEyNXY3WDJjUGdBNTZtcnBCamc0QkViTGxMM204ZTV3ZDIvL25tbjM5d01ZelhLREM3Q1dUd0FBQUFaaVMwZEVBTEFBdndERnpJZzhlUUFBQUFsd1NGbHpBQUFMRXdBQUN4TUJBSnFjR0FBQUFBZDBTVTFGQitVSUN3MElMbkg3K01VQUFBTjNTVVJCVkhqYTdack5UaHN4RUlESDN0MndiSVFVSXJVUFFGOEJpZklYY21nbFZFU3BRdk1LOU5aS2JhWCtJU0FvRkNGUkR0eklLMUNpQWdwQ2FnOEZDb0ZESDRFK0FuQWhoR3gyM1VOVnFZaGRlKzExc3BUNE8wYXh4ek9lOGN6WUM2QlFLQlFLaFVLaFVDaGFFUlNGMElQTkJlSTZOamgyRlFBaDBBd1RNTmFoYi9RTnVuVUcyRitmSjNXN0FvUVF2b1VoQkxwaFFmL1lPL1RmR1dCbmRaSlQzV0FMSGNybTBZMDFRTG4wNld2dDR1d0JrYTc2ZGMrSXRTZSs5WTY4ZW5nakRIQzR0YlJTUFQrWmlPSXNNZVBKd3YxSEw1OUZab0RkNGd4eG5YcWtwempXZEVobFpsQlREVkF1TFI1ZlZzNjZSTWJxaGdsNnpMcTJjNGRiU3l2MVdtV2libGVGRkdtekVyOTZSMTdmYTdnQmZuekpFNUZGOHJpcmFGanBoZ2tEVHlaUnd3eXd1elpOWE5kcHlzNkllaHJHR3FUR2MwaTZBWFkrVHhGQ1hDNEYwcExTMXZmVlNhN1VnaENHb2FlemdXVGpZRHNmbmZJaWN4SGl3dTdhRkpGaWdMMWlqcmh1ZE1xTHp1bTZMdXdWYzB3ajZOUXlkbU9lMkpmbjNERWY1SDlIMjh1ZHRjcnBDUUJBekVwMDl3eS8rQmxrYnA0endYRnMyTitZSi8yUC9jdHBKRFAyZ3V3VUxZc0VPY1ZscnduTEZHVEdrd1hXNG1rcHRHNVhtWEpaTW5oMVFkNGQzRWRpMXlwUzQ1VFhvRExuQWdBd1loYjBqNzFIZ1R4QVJIbmRNS2x1TDFKd2ljanl3MDhuN0pYdmhVcmNtRldndVRZdnRERTBXYXhhaG1rQTNuei9GNzh5OTJoN3VWTTA5Zm1ORmUwQXZYVERZVjJWUmUzaTdDU0tzYjZodFQ1SHVDdkIyOHdWQS9CMlVrR0l0U2VTVVl6MVkyRHNBNko2QUVKaVRuRzR0YlRpOVh2UDhQTlQwY1g2amZXVEZhUkpZaDZDUWJ1b2E2ZDJyVEloTTIzUnh0QmswZkRTRGZzVkRUTFRsa2hvMGNhSXBGVS9uVHdONEZVeGhRa0QzbTZPOWw5UjkvZlRDY3RzYVZuWFdPbHNIdEZjV3pkTXBseVJxektoWmdnQXdHaUxjMXU2WEZvOFpybDJPcHRIVnNmZHBLWWJvR2tHdEhmYzZVNW44NGdWS3F5NVJYUmc3dkplTVVjY3g0NzhRa1NrQ2RJMEF3WXoweWpVamRCZ1pocGhqQnU2MEViTWlURm1LaCs0RWt5Tnp5TGUra0NtRVVRdVJWUGp3ZEs1dWhZWDZkTmI5bUVrek03OHUwaXZwN0Z5YWZIWXNTKzY2dmFsVUpnMDdXbnNTa2pjZ3NmUlVPMXdLak9EUkM0cFpXSEdrNFV3eW9mMmdLc3UzS0lmU0hqUmtwL0krTkdTSDBteE9OaGNJSzViLy9PWkhBQm91Z2xZMDZCdjlDMENoVUtoVUNnVUNvVkNvV2dDdndGa3NzQkN6bkxwTkFBQUFBQkpSVTVFcmtKZ2dnPT0iIHdpZHRoPSIyNSIgaGVpZ2h0PSIyNSIgYWx0PSIiIHN0eWxlPSJtYXJnaW46IDEwcHg7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGUiLz5MYSBkb25uw6llIGRvaXQgw6p0cmUgY29tcGFyw6llIGF2ZWMgbGVzIGRvY3VtZW50cyBkJ2lkZW50aXTDqSBwb3VyIMOqdHJlIHZhbGlkw6llPC9wPjxoMyBzdHlsZT0iY29sb3I6ICMwMDMwODgiPkQnb8O5IHByb3ZpZW5uZW50IGxlcyByw6lzdWx0YXRzID88L2gzPjxwPiBMZXMgZG9ubsOpZXMgcHJvdmllbm5lbnQgdG91dGVzIGR1IDJELURPQyBvdSBkdSBRUiBDb2RlIHNjYW5uw6kuIEVsbGVzIHNvbnQgZMOpY29kw6llcyBldCBhZmZpY2jDqWVzLCBhdmVjIHVuIGNvbnRyw7RsZSBkZSBsYSB2YWxpZGl0w6kgZGUgbGEgc2lnbmF0dXJlIG51bcOpcmlxdWUuPGJyPiBMb3JzIGRlIGNlIHRyYWl0ZW1lbnQsIGF1Y3VuZSBkb25uw6llIG4nZXN0IGNvbnNlcnbDqWUgZW4gYmFzZSBkZSBkb25uw6llcy48L3A+PC9kaXY+PC9ib2R5PjwvaHRtbD4=");
            String string2 = stringBuilder.toString();
            if (sharedPreferences != null && (string = sharedPreferences.getString(context.getString(2131820849), string2)) != null) {
                string2 = string;
            }
            webView.loadData(string2, "text/html", "base64");
            TutorialResultLiteMainBinding tutorialResultLiteMainBinding4 = this._binding;
            Intrinsics.checkNotNull((Object)tutorialResultLiteMainBinding4);
            tutorialResultLiteMainBinding4.webViewTuto.setBackgroundColor(0);
            return constraintLayout;
        }
        throw new Exception("Invalid Activity");
    }

    @Override
    public void onItemClick(int n2) {
    }

    public void onResume() {
        Log.d((String)"tutorialResult2DDoc", (String)"on Resume");
        this.mCalled = true;
    }

    @Override
    public MainActivity.NavigationIcon showNavigation() {
        return MainActivity.NavigationIcon.BACK;
    }
}

